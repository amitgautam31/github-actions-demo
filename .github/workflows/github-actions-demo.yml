name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  schedule:
    - cron: '0 0 * * *'
    - cron: '15 1 * * SAT'
    - cron: '20 0 1 * *'
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - if: github.event_name == 'push'
        name: cleanup previous backup of daily on push 
        run: |
          curl -X DELETE -H 'Authorization: Bearer ${{ secrets.XATA_API_KEY }}' https://$WORKSPACE_ID.$REGION.xata.sh/db/$DATABASE_NAME:daily
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - if: github.event.schedule == '0 0 * * *'
        name: cleanup previous backup of daily 
        run: |
          curl -X DELETE -H 'Authorization: Bearer ${{ secrets.XATA_API_KEY }}' https://$WORKSPACE_ID.$REGION.xata.sh/db/$DATABASE_NAME:daily
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - if: github.event.schedule == '15 1 * * SAT'
        name: cleanup previous backup of weekly 
        run: |
          curl -X DELETE -H 'Authorization: Bearer ${{ secrets.XATA_API_KEY }}' https://$WORKSPACE_ID.$REGION.xata.sh/db/$DATABASE_NAME:weekly
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - if: github.event.schedule == '20 0 1 * *'
        name: cleanup previous backup of monthly 
        run: |
          curl -X DELETE -H 'Authorization: Bearer ${{ secrets.XATA_API_KEY }}' https://$WORKSPACE_ID.$REGION.xata.sh/db/$DATABASE_NAME:monthly
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - name: setup python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # install the python version needed   
      - run: echo "üêç Setup python completed."
      - name : backup database daily
        if: github.event.schedule == '0 0 * * *'
        run: |
          git clone https://github.com/xataio/xtools.git
          cd xtools/xreplay
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python xreplay.py \
            --from_workspace $WORKSPACE_ID \
            --from_database $DATABASE_NAME \
            --from_branch main \
            --from_region $REGION \
            --from_XATA_API_KEY $XATA_API_KEY \
            --to_workspace $WORKSPACE_ID \
            --to_database $DATABASE_NAME \
            --to_branch daily \
            --to_region $REGION \
            --to_XATA_API_KEY $XATA_API_KEY \
            --output xata
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - name : backup database weekly
        if: github.event.schedule == '15 1 * * SAT'
        run: |
          git clone https://github.com/xataio/xtools.git
          cd xtools/xreplay
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python xreplay.py \
            --from_workspace $WORKSPACE_ID \
            --from_database $DATABASE_NAME \
            --from_branch main \
            --from_region $REGION \
            --from_XATA_API_KEY $XATA_API_KEY \
            --to_workspace $WORKSPACE_ID \
            --to_database $DATABASE_NAME \
            --to_branch weekly \
            --to_region $REGION \
            --to_XATA_API_KEY $XATA_API_KEY \
            --output xata
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - name : backup database monthly
        if: github.event.schedule == '0 0 1 * *'
        run: |
          git clone https://github.com/xataio/xtools.git
          cd xtools/xreplay
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python xreplay.py \
            --from_workspace $WORKSPACE_ID \
            --from_database $DATABASE_NAME \
            --from_branch main \
            --from_region $REGION \
            --from_XATA_API_KEY $XATA_API_KEY \
            --to_workspace $WORKSPACE_ID \
            --to_database $DATABASE_NAME \
            --to_branch monthly \
            --to_region $REGION \
            --to_XATA_API_KEY $XATA_API_KEY \
            --output xata
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - name : backup database on push
        if: github.event_name == 'push'
        run: |
          git clone https://github.com/xataio/xtools.git
          cd xtools/xreplay
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python xreplay.py \
            --from_workspace $WORKSPACE_ID \
            --from_database $DATABASE_NAME \
            --from_branch main \
            --from_region $REGION \
            --from_XATA_API_KEY $XATA_API_KEY \
            --to_workspace $WORKSPACE_ID \
            --to_database $DATABASE_NAME \
            --to_branch daily \
            --to_region $REGION \
            --to_XATA_API_KEY $XATA_API_KEY \
            --output xata
        env:
          XATA_API_KEY: ${{ secrets.XATA_API_KEY }}
          WORKSPACE_ID: ${{ secrets.WORKSPACE_ID }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          REGION: ${{ secrets.REGION }}
      - run: echo "üçè This job's status is ${{ job.status }}."
